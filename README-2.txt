Barbara Sudol bas334 and Drew Mera dnm54

To interact with our GUI: when you run gui.Main, one window should pop up. It has two drop down boxes in which you select the Player 1 and Player 2 Controllers and click OK. When you click OK, a second window should pop up with a 9x9 game board. If you selected two non-user controllers, 
such as 2 DumbAI or SmartAI or RandomAI's, the game board will pop up with the results of the game, and the winning 5 in a row line highlighted in green. If Player 1 or Player 2 (or both) is User, then the boxes will show X's or O's respectively when the mouse hovers over each box during their turn. In addition, the title at the top of the frame will say whose turn it is. Click on the box to select your turn and the X or O will show up in the box. If/when 5 boxes in a row occur, the winning line will highlight green, which denotes that the game is over with the winner the highlighted player, and a window will pop up displaying the winner. Clicking on this window closes the game board.

One slight shortcoming of ours is that when you run two AI's against  eachother, you don't see them play, you just see the end game board come up. In addition, we hard-wired the SmartAI to look at only a depth of 3â€”there is no way for the user to select this.

To improve this assignment for the future, we think it would make it much less frustrating and much more educational and fun if there was more guidance for the project, especially for MinMax. The only instructions were to 'implement MinMax' and a very vague description of what it is  supposed to do. In addition, there were a lot of moving parts, lots of classes and functions that made it confusing to hook up the GUI to the game. Otherwise, it was a fun project and a good way to learn how GUI's work.
